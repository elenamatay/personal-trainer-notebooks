import os
import traceback
from _pydevd_bundle.pydevd_constants import ForkSafeLock

_pid = os.getpid()
<<<<<<< HEAD
_pid_msg = "%s: " % (_pid,)
=======
_pid_msg = '%s: ' % (_pid,)
>>>>>>> 18d7037cf30f05fb9c835180cb251f94a7f2d64c

_debug_lock = ForkSafeLock()

DEBUG = False
<<<<<<< HEAD
DEBUG_FILE = os.path.join(os.path.dirname(__file__), "__debug_output__.txt")
=======
DEBUG_FILE = os.path.join(os.path.dirname(__file__), '__debug_output__.txt')
>>>>>>> 18d7037cf30f05fb9c835180cb251f94a7f2d64c


def debug(msg):
    if DEBUG:
        with _debug_lock:
            _pid_prefix = _pid_msg
            if isinstance(msg, bytes):
<<<<<<< HEAD
                _pid_prefix = _pid_prefix.encode("utf-8")

                if not msg.endswith(b"\r") and not msg.endswith(b"\n"):
                    msg += b"\n"
                mode = "a+b"
            else:
                if not msg.endswith("\r") and not msg.endswith("\n"):
                    msg += "\n"
                mode = "a+"
=======
                _pid_prefix = _pid_prefix.encode('utf-8')

                if not msg.endswith(b'\r') and not msg.endswith(b'\n'):
                    msg += b'\n'
                mode = 'a+b'
            else:
                if not msg.endswith('\r') and not msg.endswith('\n'):
                    msg += '\n'
                mode = 'a+'
>>>>>>> 18d7037cf30f05fb9c835180cb251f94a7f2d64c
            with open(DEBUG_FILE, mode) as stream:
                stream.write(_pid_prefix)
                stream.write(msg)


def debug_exception(msg=None):
    if DEBUG:
        if msg:
            debug(msg)

        with _debug_lock:
<<<<<<< HEAD
            with open(DEBUG_FILE, "a+") as stream:
                _pid_prefix = _pid_msg
                if isinstance(msg, bytes):
                    _pid_prefix = _pid_prefix.encode("utf-8")
=======

            with open(DEBUG_FILE, 'a+') as stream:
                _pid_prefix = _pid_msg
                if isinstance(msg, bytes):
                    _pid_prefix = _pid_prefix.encode('utf-8')
>>>>>>> 18d7037cf30f05fb9c835180cb251f94a7f2d64c
                stream.write(_pid_prefix)

                traceback.print_exc(file=stream)
